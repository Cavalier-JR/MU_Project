{"version":3,"file":"switch4.mjs","sources":["../../../../../../packages/components/switch/src/switch.vue"],"sourcesContent":["<template>\n  <div :class=\"switchKls\" @click.prevent=\"switchValue\">\n    <input\n      :id=\"inputId\"\n      ref=\"input\"\n      :class=\"ns.e('input')\"\n      type=\"checkbox\"\n      role=\"switch\"\n      :aria-checked=\"checked\"\n      :aria-disabled=\"switchDisabled\"\n      :name=\"name\"\n      :true-value=\"activeValue\"\n      :false-value=\"inactiveValue\"\n      :disabled=\"switchDisabled\"\n      @change=\"handleChange\"\n      @keydown.enter=\"switchValue\"\n    />\n    <span\n      v-if=\"!inlinePrompt && (inactiveIcon || inactiveText)\"\n      :class=\"[\n        ns.e('label'),\n        ns.em('label', 'left'),\n        ns.is('active', !checked),\n      ]\"\n    >\n      <el-icon v-if=\"inactiveIcon\"><component :is=\"inactiveIcon\" /></el-icon>\n      <span v-if=\"!inactiveIcon && inactiveText\" :aria-hidden=\"checked\">{{\n        inactiveText\n      }}</span>\n    </span>\n    <span ref=\"core\" :class=\"ns.e('core')\" :style=\"coreStyle\">\n      <div v-if=\"inlinePrompt\" :class=\"ns.e('inner')\">\n        <template v-if=\"activeIcon || inactiveIcon\">\n          <el-icon\n            v-if=\"activeIcon\"\n            :class=\"[ns.is('icon'), checked ? ns.is('show') : ns.is('hide')]\"\n          >\n            <component :is=\"activeIcon\" />\n          </el-icon>\n          <el-icon\n            v-if=\"inactiveIcon\"\n            :class=\"[ns.is('icon'), !checked ? ns.is('show') : ns.is('hide')]\"\n          >\n            <component :is=\"inactiveIcon\" />\n          </el-icon>\n        </template>\n        <template v-else-if=\"activeText || inactiveIcon\">\n          <span\n            v-if=\"activeText\"\n            :class=\"[ns.is('text'), checked ? ns.is('show') : ns.is('hide')]\"\n            :aria-hidden=\"!checked\"\n          >\n            {{ activeText.substring(0, 3) }}\n          </span>\n          <span\n            v-if=\"inactiveText\"\n            :class=\"[ns.is('text'), !checked ? ns.is('show') : ns.is('hide')]\"\n            :aria-hidden=\"checked\"\n          >\n            {{ inactiveText.substring(0, 3) }}\n          </span>\n        </template>\n      </div>\n      <div :class=\"ns.e('action')\">\n        <el-icon v-if=\"loading\" :class=\"ns.is('loading')\"><loading /></el-icon>\n      </div>\n    </span>\n    <span\n      v-if=\"!inlinePrompt && (activeIcon || activeText)\"\n      :class=\"[\n        ns.e('label'),\n        ns.em('label', 'right'),\n        ns.is('active', checked),\n      ]\"\n    >\n      <el-icon v-if=\"activeIcon\"><component :is=\"activeIcon\" /></el-icon>\n      <span v-if=\"!activeIcon && activeText\" :aria-hidden=\"!checked\">{{\n        activeText\n      }}</span>\n    </span>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, nextTick, onMounted, ref, watch } from 'vue'\nimport { isPromise } from '@vue/shared'\nimport { addUnit, debugWarn, isBoolean, throwError } from '@element-plus/utils'\nimport ElIcon from '@element-plus/components/icon'\nimport { Loading } from '@element-plus/icons-vue'\nimport {\n  CHANGE_EVENT,\n  INPUT_EVENT,\n  UPDATE_MODEL_EVENT,\n} from '@element-plus/constants'\nimport {\n  useDisabled,\n  useFormItem,\n  useFormItemInputId,\n  useNamespace,\n  useSize,\n} from '@element-plus/hooks'\nimport { switchEmits, switchProps } from './switch'\n\nimport type { CSSProperties } from 'vue'\n\nconst COMPONENT_NAME = 'ElSwitch'\n\nexport default defineComponent({\n  name: COMPONENT_NAME,\n  components: { ElIcon, Loading },\n\n  props: switchProps,\n  emits: switchEmits,\n\n  setup(props, { emit }) {\n    const { formItem } = useFormItem()\n    const switchDisabled = useDisabled(computed(() => props.loading))\n    const ns = useNamespace('switch')\n\n    const { inputId } = useFormItemInputId(props, {\n      formItemContext: formItem,\n    })\n\n    const switchSize = useSize()\n    const isModelValue = ref(props.modelValue !== false)\n    const input = ref<HTMLInputElement>()\n    const core = ref<HTMLSpanElement>()\n\n    const switchKls = computed(() => [\n      ns.b(),\n      ns.m(switchSize.value),\n      ns.is('disabled', switchDisabled.value),\n      ns.is('checked', checked.value),\n    ])\n\n    const coreStyle = computed<CSSProperties>(() => ({\n      width: addUnit(props.width),\n    }))\n\n    watch(\n      () => props.modelValue,\n      () => {\n        isModelValue.value = true\n      }\n    )\n\n    watch(\n      () => props.value,\n      () => {\n        isModelValue.value = false\n      }\n    )\n\n    const actualValue = computed(() => {\n      return isModelValue.value ? props.modelValue : props.value\n    })\n\n    const checked = computed(() => actualValue.value === props.activeValue)\n\n    if (![props.activeValue, props.inactiveValue].includes(actualValue.value)) {\n      emit(UPDATE_MODEL_EVENT, props.inactiveValue)\n      emit(CHANGE_EVENT, props.inactiveValue)\n      emit(INPUT_EVENT, props.inactiveValue)\n    }\n\n    watch(checked, () => {\n      input.value!.checked = checked.value\n\n      if (props.activeColor || props.inactiveColor) {\n        setBackgroundColor()\n      }\n\n      if (props.validateEvent) {\n        formItem?.validate?.('change').catch((err) => debugWarn(err))\n      }\n    })\n\n    const handleChange = (): void => {\n      const val = checked.value ? props.inactiveValue : props.activeValue\n      emit(UPDATE_MODEL_EVENT, val)\n      emit(CHANGE_EVENT, val)\n      emit(INPUT_EVENT, val)\n      nextTick(() => {\n        input.value!.checked = checked.value\n      })\n    }\n\n    const switchValue = (): void => {\n      if (switchDisabled.value) return\n\n      const { beforeChange } = props\n      if (!beforeChange) {\n        handleChange()\n        return\n      }\n\n      const shouldChange = beforeChange()\n\n      const isExpectType = [\n        isPromise(shouldChange),\n        isBoolean(shouldChange),\n      ].some((i) => i)\n      if (!isExpectType) {\n        throwError(\n          COMPONENT_NAME,\n          'beforeChange must return type `Promise<boolean>` or `boolean`'\n        )\n      }\n\n      if (isPromise(shouldChange)) {\n        shouldChange\n          .then((result) => {\n            if (result) {\n              handleChange()\n            }\n          })\n          .catch((e) => {\n            debugWarn(COMPONENT_NAME, `some error occurred: ${e}`)\n          })\n      } else if (shouldChange) {\n        handleChange()\n      }\n    }\n\n    const setBackgroundColor = (): void => {\n      const newColor = checked.value ? props.activeColor : props.inactiveColor\n      const coreEl = core.value\n      if (props.borderColor) coreEl!.style.borderColor = props.borderColor\n      else if (!props.borderColor) coreEl!.style.borderColor = newColor\n      coreEl!.style.backgroundColor = newColor\n      ;(coreEl!.children[0] as HTMLDivElement).style.color = newColor\n    }\n\n    const focus = (): void => {\n      input.value?.focus?.()\n    }\n\n    onMounted(() => {\n      if (props.activeColor || props.inactiveColor || props.borderColor) {\n        setBackgroundColor()\n      }\n\n      input.value!.checked = checked.value\n    })\n\n    return {\n      ns,\n      input,\n      inputId,\n      core,\n      switchDisabled,\n      checked,\n      switchKls,\n      coreStyle,\n      handleChange,\n      switchValue,\n      focus,\n    }\n  },\n})\n</script>\n"],"names":["_resolveComponent","_openBlock","_normalizeClass","_withModifiers","_createElementVNode","_withKeys","_createElementBlock","_withCtx","_createCommentVNode","_toDisplayString","_normalizeStyle","_Fragment","_createBlock"],"mappings":"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"}