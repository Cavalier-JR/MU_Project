{"version":3,"file":"basic-month-table2.mjs","sources":["../../../../../../../packages/components/date-picker/src/date-picker-com/basic-month-table.vue"],"sourcesContent":["<template>\n  <table\n    class=\"el-month-table\"\n    @click=\"handleMonthTableClick\"\n    @mousemove=\"handleMouseMove\"\n  >\n    <tbody>\n      <tr v-for=\"(row, key) in rows\" :key=\"key\">\n        <td v-for=\"(cell, key_) in row\" :key=\"key_\" :class=\"getCellStyle(cell)\">\n          <div>\n            <a class=\"cell\">{{\n              t('el.datepicker.months.' + months[cell.text])\n            }}</a>\n          </div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, ref } from 'vue'\nimport dayjs from 'dayjs'\nimport { useLocale } from '@element-plus/hooks'\nimport { rangeArr } from '@element-plus/components/time-picker'\nimport { castArray, hasClass } from '@element-plus/utils'\n\nimport type { PropType } from 'vue'\nimport type { Dayjs } from 'dayjs'\n\nconst datesInMonth = (year: number, month: number, lang: string) => {\n  const firstDay = dayjs().locale(lang).startOf('month').month(month).year(year)\n  const numOfDays = firstDay.daysInMonth()\n  return rangeArr(numOfDays).map((n) => firstDay.add(n, 'day').toDate())\n}\n\nexport default defineComponent({\n  props: {\n    disabledDate: {\n      type: Function as PropType<(_: Date) => void>,\n    },\n    selectionMode: {\n      type: String,\n      default: 'month',\n    },\n    minDate: {\n      type: Object as PropType<Dayjs>,\n    },\n    maxDate: {\n      type: Object as PropType<Dayjs>,\n    },\n    date: {\n      type: Object as PropType<Dayjs>,\n    },\n    parsedValue: {\n      type: Object as PropType<Dayjs>,\n    },\n    rangeState: {\n      type: Object,\n      default: () => ({\n        endDate: null,\n        selecting: false,\n      }),\n    },\n  },\n\n  emits: ['changerange', 'pick', 'select'],\n\n  setup(props, ctx) {\n    const { t, lang } = useLocale()\n    const months = ref(\n      props.date\n        .locale('en')\n        .localeData()\n        .monthsShort()\n        .map((_) => _.toLowerCase())\n    )\n    const tableRows = ref([[], [], []])\n    const lastRow = ref(null)\n    const lastColumn = ref(null)\n    const rows = computed(() => {\n      // TODO: refactory rows / getCellClasses\n      const rows = tableRows.value\n      const now = dayjs().locale(lang.value).startOf('month')\n\n      for (let i = 0; i < 3; i++) {\n        const row = rows[i]\n        for (let j = 0; j < 4; j++) {\n          let cell = row[j]\n          if (!cell) {\n            cell = {\n              row: i,\n              column: j,\n              type: 'normal',\n              inRange: false,\n              start: false,\n              end: false,\n            }\n          }\n\n          cell.type = 'normal'\n\n          const index = i * 4 + j\n          const calTime = props.date.startOf('year').month(index)\n\n          const calEndDate =\n            props.rangeState.endDate ||\n            props.maxDate ||\n            (props.rangeState.selecting && props.minDate)\n\n          cell.inRange =\n            (props.minDate &&\n              calTime.isSameOrAfter(props.minDate, 'month') &&\n              calEndDate &&\n              calTime.isSameOrBefore(calEndDate, 'month')) ||\n            (props.minDate &&\n              calTime.isSameOrBefore(props.minDate, 'month') &&\n              calEndDate &&\n              calTime.isSameOrAfter(calEndDate, 'month'))\n\n          if (props.minDate?.isSameOrAfter(calEndDate)) {\n            cell.start = calEndDate && calTime.isSame(calEndDate, 'month')\n            cell.end = props.minDate && calTime.isSame(props.minDate, 'month')\n          } else {\n            cell.start = props.minDate && calTime.isSame(props.minDate, 'month')\n            cell.end = calEndDate && calTime.isSame(calEndDate, 'month')\n          }\n\n          const isToday = now.isSame(calTime)\n\n          if (isToday) {\n            cell.type = 'today'\n          }\n          cell.text = index\n          const cellDate = calTime.toDate()\n          cell.disabled = props.disabledDate && props.disabledDate(cellDate)\n          row[j] = cell\n        }\n      }\n      return rows\n    })\n    const getCellStyle = (cell) => {\n      const style = {} as any\n      const year = props.date.year()\n      const today = new Date()\n      const month = cell.text\n\n      style.disabled = props.disabledDate\n        ? datesInMonth(year, month, lang.value).every(props.disabledDate)\n        : false\n      style.current =\n        castArray(props.parsedValue).findIndex(\n          (date) => date.year() === year && date.month() === month\n        ) >= 0\n      style.today = today.getFullYear() === year && today.getMonth() === month\n\n      if (cell.inRange) {\n        style['in-range'] = true\n\n        if (cell.start) {\n          style['start-date'] = true\n        }\n\n        if (cell.end) {\n          style['end-date'] = true\n        }\n      }\n      return style\n    }\n\n    const handleMouseMove = (event) => {\n      if (!props.rangeState.selecting) return\n\n      let target = event.target\n      if (target.tagName === 'A') {\n        target = target.parentNode.parentNode\n      }\n      if (target.tagName === 'DIV') {\n        target = target.parentNode\n      }\n      if (target.tagName !== 'TD') return\n\n      const row = target.parentNode.rowIndex\n      const column = target.cellIndex\n      // can not select disabled date\n      if (rows.value[row][column].disabled) return\n\n      // only update rangeState when mouse moves to a new cell\n      // this avoids frequent Date object creation and improves performance\n      if (row !== lastRow.value || column !== lastColumn.value) {\n        lastRow.value = row\n        lastColumn.value = column\n        ctx.emit('changerange', {\n          selecting: true,\n          endDate: props.date.startOf('year').month(row * 4 + column),\n        })\n      }\n    }\n    const handleMonthTableClick = (event) => {\n      let target = event.target\n      if (target.tagName === 'A') {\n        target = target.parentNode.parentNode\n      }\n      if (target.tagName === 'DIV') {\n        target = target.parentNode\n      }\n      if (target.tagName !== 'TD') return\n      if (hasClass(target, 'disabled')) return\n      const column = target.cellIndex\n      const row = target.parentNode.rowIndex\n      const month = row * 4 + column\n      const newDate = props.date.startOf('year').month(month)\n      if (props.selectionMode === 'range') {\n        if (!props.rangeState.selecting) {\n          ctx.emit('pick', { minDate: newDate, maxDate: null })\n          ctx.emit('select', true)\n        } else {\n          if (newDate >= props.minDate) {\n            ctx.emit('pick', { minDate: props.minDate, maxDate: newDate })\n          } else {\n            ctx.emit('pick', { minDate: newDate, maxDate: props.minDate })\n          }\n          ctx.emit('select', false)\n        }\n      } else {\n        ctx.emit('pick', month)\n      }\n    }\n\n    return {\n      handleMouseMove,\n      handleMonthTableClick,\n      rows,\n      getCellStyle,\n      t,\n      months,\n    }\n  },\n})\n</script>\n"],"names":["_openBlock","_createElementBlock","_createElementVNode","_Fragment","_renderList","_normalizeClass","_toDisplayString"],"mappings":"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"}