import type { ExtractPropTypes, TransitionProps } from 'vue';
export declare const tooltipV2Props: {
    readonly alwaysOn: BooleanConstructor;
    readonly fullTransition: BooleanConstructor;
    readonly transitionProps: import("element-plus/es/utils").BuildPropReturn<import("element-plus/es/utils").PropWrapper<TransitionProps | null>, null, unknown, unknown, unknown>;
    readonly teleported: BooleanConstructor;
    readonly to: import("element-plus/es/utils").BuildPropReturn<import("element-plus/es/utils").PropWrapper<string | import("vue").RendererElement | null | undefined>, "body", unknown, unknown, unknown>;
    readonly ariaLabel: StringConstructor;
    readonly arrowPadding: import("element-plus/es/utils").BuildPropReturn<import("element-plus/es/utils").PropWrapper<number>, 5, unknown, unknown, unknown>;
    readonly effect: import("element-plus/es/utils").BuildPropReturn<StringConstructor, "", unknown, unknown, unknown>;
    readonly contentClass: StringConstructor;
    readonly placement: import("element-plus/es/utils").BuildPropReturn<import("element-plus/es/utils").PropWrapper<import("@floating-ui/core").Placement>, "bottom", unknown, "top" | "right" | "bottom" | "left" | "top-start" | "top-end" | "bottom-start" | "bottom-end" | "right-start" | "right-end" | "left-start" | "left-end", unknown>;
    readonly reference: import("element-plus/es/utils").BuildPropReturn<import("element-plus/es/utils").PropWrapper<HTMLElement | import("@floating-ui/dom").VirtualElement | null>, null, unknown, unknown, unknown>;
    readonly offset: import("element-plus/es/utils").BuildPropReturn<NumberConstructor, 8, unknown, unknown, unknown>;
    readonly strategy: import("element-plus/es/utils").BuildPropReturn<import("element-plus/es/utils").PropWrapper<import("@floating-ui/core").Strategy>, "absolute", unknown, "fixed" | "absolute", unknown>;
    readonly showArrow: import("element-plus/es/utils").BuildPropReturn<BooleanConstructor, false, unknown, unknown, unknown>;
    readonly onBlur: import("element-plus/es/utils").BuildPropReturn<import("element-plus/es/utils").PropWrapper<(e: Event) => boolean | void>, unknown, unknown, unknown, unknown>;
    readonly onClick: import("element-plus/es/utils").BuildPropReturn<import("element-plus/es/utils").PropWrapper<(e: Event) => boolean | void>, unknown, unknown, unknown, unknown>;
    readonly onFocus: import("element-plus/es/utils").BuildPropReturn<import("element-plus/es/utils").PropWrapper<(e: Event) => boolean | void>, unknown, unknown, unknown, unknown>;
    readonly onMouseDown: import("element-plus/es/utils").BuildPropReturn<import("element-plus/es/utils").PropWrapper<(e: Event) => boolean | void>, unknown, unknown, unknown, unknown>;
    readonly onMouseEnter: import("element-plus/es/utils").BuildPropReturn<import("element-plus/es/utils").PropWrapper<(e: Event) => boolean | void>, unknown, unknown, unknown, unknown>;
    readonly onMouseLeave: import("element-plus/es/utils").BuildPropReturn<import("element-plus/es/utils").PropWrapper<(e: Event) => boolean | void>, unknown, unknown, unknown, unknown>;
    readonly width: import("element-plus/es/utils").BuildPropReturn<NumberConstructor, 10, unknown, unknown, unknown>;
    readonly height: import("element-plus/es/utils").BuildPropReturn<NumberConstructor, 10, unknown, unknown, unknown>;
    readonly style: import("element-plus/es/utils").BuildPropReturn<import("element-plus/es/utils").PropWrapper<import("vue").CSSProperties | null>, null, unknown, unknown, unknown>;
    readonly delayDuration: import("element-plus/es/utils").BuildPropReturn<NumberConstructor, 300, unknown, unknown, unknown>;
    readonly defaultOpen: BooleanConstructor;
    readonly open: import("element-plus/es/utils").BuildPropReturn<BooleanConstructor, undefined, unknown, unknown, unknown>;
    readonly onOpenChange: import("element-plus/es/utils").BuildPropReturn<import("element-plus/es/utils").PropWrapper<(state: boolean) => void>, unknown, unknown, unknown, unknown>;
    readonly 'onUpdate:open': import("element-plus/es/utils").BuildPropReturn<import("element-plus/es/utils").PropWrapper<(state: boolean) => void>, unknown, unknown, unknown, unknown>;
};
export declare type TooltipV2Props = ExtractPropTypes<typeof tooltipV2Props>;
