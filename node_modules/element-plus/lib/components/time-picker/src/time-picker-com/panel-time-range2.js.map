{"version":3,"file":"panel-time-range2.js","sources":["../../../../../../../packages/components/time-picker/src/time-picker-com/panel-time-range.vue"],"sourcesContent":["<template>\n  <div\n    v-if=\"actualVisible\"\n    :class=\"[nsTime.b('range-picker'), nsPicker.b('panel')]\"\n  >\n    <div :class=\"nsTime.be('range-picker', 'content')\">\n      <div :class=\"nsTime.be('range-picker', 'cell')\">\n        <div :class=\"nsTime.be('range-picker', 'header')\">\n          {{ t('el.datepicker.startTime') }}\n        </div>\n        <div\n          :class=\"[\n            nsTime.be('range-picker', 'body'),\n            nsTime.be('panel', 'content'),\n            nsTime.is('arrow', arrowControl),\n            { 'has-seconds': showSeconds },\n          ]\"\n        >\n          <time-spinner\n            ref=\"minSpinner\"\n            role=\"start\"\n            :show-seconds=\"showSeconds\"\n            :am-pm-mode=\"amPmMode\"\n            :arrow-control=\"arrowControl\"\n            :spinner-date=\"minDate\"\n            :disabled-hours=\"disabledHours_\"\n            :disabled-minutes=\"disabledMinutes_\"\n            :disabled-seconds=\"disabledSeconds_\"\n            @change=\"handleMinChange\"\n            @set-option=\"onSetOption\"\n            @select-range=\"setMinSelectionRange\"\n          />\n        </div>\n      </div>\n      <div :class=\"nsTime.be('range-picker', 'cell')\">\n        <div :class=\"nsTime.be('range-picker', 'header')\">\n          {{ t('el.datepicker.endTime') }}\n        </div>\n        <div\n          :class=\"[\n            nsTime.be('range-picker', 'body'),\n            nsTime.be('panel', 'content'),\n            nsTime.is('arrow', arrowControl),\n            { 'has-seconds': showSeconds },\n          ]\"\n        >\n          <time-spinner\n            ref=\"maxSpinner\"\n            role=\"end\"\n            :show-seconds=\"showSeconds\"\n            :am-pm-mode=\"amPmMode\"\n            :arrow-control=\"arrowControl\"\n            :spinner-date=\"maxDate\"\n            :disabled-hours=\"disabledHours_\"\n            :disabled-minutes=\"disabledMinutes_\"\n            :disabled-seconds=\"disabledSeconds_\"\n            @change=\"handleMaxChange\"\n            @set-option=\"onSetOption\"\n            @select-range=\"setMaxSelectionRange\"\n          />\n        </div>\n      </div>\n    </div>\n    <div :class=\"nsTime.be('panel', 'footer')\">\n      <button\n        type=\"button\"\n        :class=\"[nsTime.be('panel', 'btn'), 'cancel']\"\n        @click=\"handleCancel()\"\n      >\n        {{ t('el.datepicker.cancel') }}\n      </button>\n      <button\n        type=\"button\"\n        :class=\"[nsTime.be('panel', 'btn'), 'confirm']\"\n        :disabled=\"btnConfirmDisabled\"\n        @click=\"handleConfirm()\"\n      >\n        {{ t('el.datepicker.confirm') }}\n      </button>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, inject, ref } from 'vue'\nimport dayjs from 'dayjs'\nimport { union } from 'lodash-unified'\nimport { useLocale, useNamespace } from '@element-plus/hooks'\nimport { EVENT_CODE } from '@element-plus/constants'\nimport TimeSpinner from './basic-time-spinner.vue'\nimport { getAvailableArrs, useOldValue } from './useTimePicker'\n\nimport type { PropType } from 'vue'\nimport type { Dayjs } from 'dayjs'\n\nconst makeSelectRange = (start: number, end: number) => {\n  const result = []\n  for (let i = start; i <= end; i++) {\n    result.push(i)\n  }\n  return result\n}\nexport default defineComponent({\n  components: { TimeSpinner },\n\n  props: {\n    visible: Boolean,\n    actualVisible: Boolean,\n    parsedValue: {\n      type: [Array] as PropType<Array<Dayjs>>,\n    },\n    format: {\n      type: String,\n      default: '',\n    },\n  },\n\n  emits: ['pick', 'select-range', 'set-picker-option'],\n\n  setup(props, ctx) {\n    const { t, lang } = useLocale()\n    const nsTime = useNamespace('time')\n    const nsPicker = useNamespace('picker')\n    const minDate = computed(() => props.parsedValue[0])\n    const maxDate = computed(() => props.parsedValue[1])\n    const oldValue = useOldValue(props)\n    const handleCancel = () => {\n      ctx.emit('pick', oldValue.value, false)\n    }\n    const showSeconds = computed(() => {\n      return props.format.includes('ss')\n    })\n    const amPmMode = computed(() => {\n      if (props.format.includes('A')) return 'A'\n      if (props.format.includes('a')) return 'a'\n      return ''\n    })\n\n    const minSelectableRange = ref([])\n    const maxSelectableRange = ref([])\n\n    const handleConfirm = (visible = false) => {\n      ctx.emit('pick', [minDate.value, maxDate.value], visible)\n    }\n\n    const handleMinChange = (date) => {\n      handleChange(date.millisecond(0), maxDate.value)\n    }\n    const handleMaxChange = (date) => {\n      handleChange(minDate.value, date.millisecond(0))\n    }\n\n    const isValidValue = (_date: Dayjs[]) => {\n      const parsedDate = _date.map((_) => dayjs(_).locale(lang.value))\n      const result = getRangeAvailableTime(parsedDate)\n      return parsedDate[0].isSame(result[0]) && parsedDate[1].isSame(result[1])\n    }\n\n    const handleChange = (_minDate, _maxDate) => {\n      // todo getRangeAvailableTime(_date).millisecond(0)\n      ctx.emit('pick', [_minDate, _maxDate], true)\n    }\n    const btnConfirmDisabled = computed(() => {\n      return minDate.value > maxDate.value\n    })\n\n    const selectionRange = ref([0, 2])\n    const setMinSelectionRange = (start, end) => {\n      ctx.emit('select-range', start, end, 'min')\n      selectionRange.value = [start, end]\n    }\n\n    const offset = computed(() => (showSeconds.value ? 11 : 8))\n    const setMaxSelectionRange = (start, end) => {\n      ctx.emit('select-range', start, end, 'max')\n      selectionRange.value = [start + offset.value, end + offset.value]\n    }\n\n    const changeSelectionRange = (step) => {\n      const list = showSeconds.value ? [0, 3, 6, 11, 14, 17] : [0, 3, 8, 11]\n      const mapping = ['hours', 'minutes'].concat(\n        showSeconds.value ? ['seconds'] : []\n      )\n      const index = list.indexOf(selectionRange.value[0])\n      const next = (index + step + list.length) % list.length\n      const half = list.length / 2\n      if (next < half) {\n        timePickerOptions['start_emitSelectRange'](mapping[next])\n      } else {\n        timePickerOptions['end_emitSelectRange'](mapping[next - half])\n      }\n    }\n\n    const handleKeydown = (event: KeyboardEvent) => {\n      const code = event.code\n\n      if (code === EVENT_CODE.left || code === EVENT_CODE.right) {\n        const step = code === EVENT_CODE.left ? -1 : 1\n        changeSelectionRange(step)\n        event.preventDefault()\n        return\n      }\n\n      if (code === EVENT_CODE.up || code === EVENT_CODE.down) {\n        const step = code === EVENT_CODE.up ? -1 : 1\n        const role = selectionRange.value[0] < offset.value ? 'start' : 'end'\n        timePickerOptions[`${role}_scrollDown`](step)\n        event.preventDefault()\n        return\n      }\n    }\n\n    const disabledHours_ = (role, compare) => {\n      const defaultDisable = disabledHours ? disabledHours(role) : []\n      const isStart = role === 'start'\n      const compareDate = compare || (isStart ? maxDate.value : minDate.value)\n      const compareHour = compareDate.hour()\n      const nextDisable = isStart\n        ? makeSelectRange(compareHour + 1, 23)\n        : makeSelectRange(0, compareHour - 1)\n      return union(defaultDisable, nextDisable)\n    }\n    const disabledMinutes_ = (hour, role, compare) => {\n      const defaultDisable = disabledMinutes ? disabledMinutes(hour, role) : []\n      const isStart = role === 'start'\n      const compareDate = compare || (isStart ? maxDate.value : minDate.value)\n      const compareHour = compareDate.hour()\n      if (hour !== compareHour) {\n        return defaultDisable\n      }\n      const compareMinute = compareDate.minute()\n      const nextDisable = isStart\n        ? makeSelectRange(compareMinute + 1, 59)\n        : makeSelectRange(0, compareMinute - 1)\n      return union(defaultDisable, nextDisable)\n    }\n    const disabledSeconds_ = (hour, minute, role, compare) => {\n      const defaultDisable = disabledSeconds\n        ? disabledSeconds(hour, minute, role)\n        : []\n      const isStart = role === 'start'\n      const compareDate = compare || (isStart ? maxDate.value : minDate.value)\n      const compareHour = compareDate.hour()\n      const compareMinute = compareDate.minute()\n      if (hour !== compareHour || minute !== compareMinute) {\n        return defaultDisable\n      }\n      const compareSecond = compareDate.second()\n      const nextDisable = isStart\n        ? makeSelectRange(compareSecond + 1, 59)\n        : makeSelectRange(0, compareSecond - 1)\n      return union(defaultDisable, nextDisable)\n    }\n\n    const getRangeAvailableTime = (dates: Array<Dayjs>) => {\n      return dates.map((_, index) =>\n        getRangeAvailableTimeEach(\n          dates[0],\n          dates[1],\n          index === 0 ? 'start' : 'end'\n        )\n      )\n    }\n\n    const { getAvailableHours, getAvailableMinutes, getAvailableSeconds } =\n      getAvailableArrs(disabledHours_, disabledMinutes_, disabledSeconds_)\n\n    const getRangeAvailableTimeEach = (\n      startDate: Dayjs,\n      endDate: Dayjs,\n      role\n    ) => {\n      const availableMap = {\n        hour: getAvailableHours,\n        minute: getAvailableMinutes,\n        second: getAvailableSeconds,\n      }\n      const isStart = role === 'start'\n      let result = isStart ? startDate : endDate\n      const compareDate = isStart ? endDate : startDate\n      ;['hour', 'minute', 'second'].forEach((_) => {\n        if (availableMap[_]) {\n          let availableArr\n          const method = availableMap[_]\n          if (_ === 'minute') {\n            availableArr = method(result.hour(), role, compareDate)\n          } else if (_ === 'second') {\n            availableArr = method(\n              result.hour(),\n              result.minute(),\n              role,\n              compareDate\n            )\n          } else {\n            availableArr = method(role, compareDate)\n          }\n          if (\n            availableArr &&\n            availableArr.length &&\n            !availableArr.includes(result[_]())\n          ) {\n            const pos = isStart ? 0 : availableArr.length - 1\n            result = result[_](availableArr[pos])\n          }\n        }\n      })\n      return result\n    }\n\n    const parseUserInput = (value: Dayjs[] | Dayjs) => {\n      if (!value) return null\n      if (Array.isArray(value)) {\n        return value.map((_) => dayjs(_, props.format).locale(lang.value))\n      }\n      return dayjs(value, props.format).locale(lang.value)\n    }\n\n    const formatToString = (value: Dayjs[] | Dayjs) => {\n      if (!value) return null\n      if (Array.isArray(value)) {\n        return value.map((_) => _.format(props.format))\n      }\n      return value.format(props.format)\n    }\n\n    const getDefaultValue = () => {\n      if (Array.isArray(defaultValue)) {\n        return defaultValue.map((_) => dayjs(_).locale(lang.value))\n      }\n      const defaultDay = dayjs(defaultValue).locale(lang.value)\n      return [defaultDay, defaultDay.add(60, 'm')]\n    }\n\n    ctx.emit('set-picker-option', ['formatToString', formatToString])\n    ctx.emit('set-picker-option', ['parseUserInput', parseUserInput])\n    ctx.emit('set-picker-option', ['isValidValue', isValidValue])\n    ctx.emit('set-picker-option', ['handleKeydown', handleKeydown])\n    ctx.emit('set-picker-option', ['getDefaultValue', getDefaultValue])\n    ctx.emit('set-picker-option', [\n      'getRangeAvailableTime',\n      getRangeAvailableTime,\n    ])\n\n    const timePickerOptions = {} as any\n    const onSetOption = (e) => {\n      timePickerOptions[e[0]] = e[1]\n    }\n\n    const pickerBase = inject('EP_PICKER_BASE') as any\n    const {\n      arrowControl,\n      disabledHours,\n      disabledMinutes,\n      disabledSeconds,\n      defaultValue,\n    } = pickerBase.props\n\n    return {\n      nsTime,\n      nsPicker,\n      arrowControl,\n      onSetOption,\n      setMaxSelectionRange,\n      setMinSelectionRange,\n      btnConfirmDisabled,\n      handleCancel,\n      handleConfirm,\n      t,\n      showSeconds,\n      minDate,\n      maxDate,\n      amPmMode,\n      handleMinChange,\n      handleMaxChange,\n      minSelectableRange,\n      maxSelectableRange,\n      disabledHours_,\n      disabledMinutes_,\n      disabledSeconds_,\n    }\n  },\n})\n</script>\n"],"names":["defineComponent","TimeSpinner","useLocale","useNamespace","computed","useOldValue","ref","dayjs","EVENT_CODE","union","getAvailableArrs","inject","_openBlock","_createElementBlock","_normalizeClass","_createElementVNode","_toDisplayString","_createVNode"],"mappings":"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"}