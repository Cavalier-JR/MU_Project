export { Alignment as TableV2Alignment, FixedDir as TableV2FixedDir, SortOrder as TableV2SortOrder, } from './src/constants';
export { default as TableV2 } from './src/table-v2';
export * from './src/auto-resizer';
export { placeholderSign as TableV2Placeholder } from './src/private';
export declare const ElTableV2: import("element-plus/es/utils").SFCWithInstall<import("vue").DefineComponent<{
    readonly cache: import("element-plus/es/utils").BuildPropReturn<NumberConstructor, 2, false, never, never>;
    readonly estimatedRowHeight: {
        readonly default: undefined;
        readonly type: import("vue").PropType<number>;
        readonly required: false;
        readonly validator: ((val: unknown) => boolean) | undefined;
        readonly __elPropsReservedKey: true;
    };
    readonly rowKey: import("element-plus/es/utils").BuildPropReturn<import("element-plus/es/utils").PropWrapper<import("./src/types").KeyType>, "id", unknown, unknown, unknown>;
    readonly headerClass: import("element-plus/es/utils").BuildPropReturn<import("element-plus/es/utils").PropWrapper<string | import("./src/table").HeaderClassNameGetter<any>>, unknown, unknown, unknown, unknown>;
    readonly headerProps: import("element-plus/es/utils").BuildPropReturn<import("element-plus/es/utils").PropWrapper<any>, unknown, unknown, unknown, unknown>;
    readonly headerCellProps: import("element-plus/es/utils").BuildPropReturn<import("element-plus/es/utils").PropWrapper<any>, unknown, unknown, unknown, unknown>;
    readonly headerHeight: import("element-plus/es/utils").BuildPropReturn<import("element-plus/es/utils").PropWrapper<number | number[]>, 50, unknown, unknown, unknown>;
    readonly footerHeight: import("element-plus/es/utils").BuildPropReturn<NumberConstructor, 0, unknown, unknown, unknown>;
    readonly rowClass: import("element-plus/es/utils").BuildPropReturn<import("element-plus/es/utils").PropWrapper<string | import("./src/table").RowClassNameGetter<any>>, unknown, unknown, unknown, unknown>;
    readonly rowProps: import("element-plus/es/utils").BuildPropReturn<import("element-plus/es/utils").PropWrapper<any>, unknown, unknown, unknown, unknown>;
    readonly rowHeight: import("element-plus/es/utils").BuildPropReturn<NumberConstructor, 50, unknown, unknown, unknown>;
    readonly cellProps: import("element-plus/es/utils").BuildPropReturn<import("element-plus/es/utils").PropWrapper<Record<string, any> | import("./src/table").ExtraCellPropGetter<any>>, unknown, unknown, unknown, unknown>;
    readonly columns: import("element-plus/es/utils").BuildPropReturn<import("element-plus/es/utils").PropWrapper<import("./src/common").AnyColumn[]>, unknown, true, unknown, unknown>;
    readonly data: import("element-plus/es/utils").BuildPropReturn<import("element-plus/es/utils").PropWrapper<any[]>, unknown, true, unknown, unknown>;
    readonly dataGetter: import("element-plus/es/utils").BuildPropReturn<import("element-plus/es/utils").PropWrapper<import("./src/types").DataGetter<any>>, unknown, unknown, unknown, unknown>;
    readonly fixedData: import("element-plus/es/utils").BuildPropReturn<import("element-plus/es/utils").PropWrapper<any[]>, unknown, unknown, unknown, unknown>;
    readonly expandColumnKey: StringConstructor;
    readonly expandedRowKeys: import("element-plus/es/utils").BuildPropReturn<import("element-plus/es/utils").PropWrapper<import("./src/types").KeyType[]>, () => never[], unknown, unknown, unknown>;
    readonly defaultExpandedRowKeys: import("element-plus/es/utils").BuildPropReturn<import("element-plus/es/utils").PropWrapper<import("./src/types").KeyType[]>, () => never[], unknown, unknown, unknown>;
    readonly class: StringConstructor;
    readonly fixed: BooleanConstructor;
    readonly style: import("element-plus/es/utils").BuildPropReturn<import("element-plus/es/utils").PropWrapper<import("vue").CSSProperties>, unknown, unknown, unknown, unknown>;
    readonly width: import("element-plus/es/utils").BuildPropReturn<NumberConstructor, unknown, true, unknown, unknown>;
    readonly height: import("element-plus/es/utils").BuildPropReturn<NumberConstructor, unknown, true, unknown, unknown>;
    readonly maxHeight: NumberConstructor;
    readonly useIsScrolling: BooleanConstructor;
    readonly indentSize: import("element-plus/es/utils").BuildPropReturn<NumberConstructor, 12, unknown, unknown, unknown>;
    readonly iconSize: import("element-plus/es/utils").BuildPropReturn<NumberConstructor, 12, unknown, unknown, unknown>;
    readonly hScrollbarSize: import("element-plus/es/utils").BuildPropReturn<NumberConstructor, 6, unknown, unknown, unknown>;
    readonly vScrollbarSize: import("element-plus/es/utils").BuildPropReturn<NumberConstructor, 6, unknown, unknown, unknown>;
    readonly scrollbarAlwaysOn: BooleanConstructor;
    readonly sortBy: import("element-plus/es/utils").BuildPropReturn<import("element-plus/es/utils").PropWrapper<import("./src/types").SortBy>, () => {
        key: import("./src/types").KeyType;
        order: import("./src/constants").SortOrder;
    }, unknown, unknown, unknown>;
    readonly sortState: import("element-plus/es/utils").BuildPropReturn<import("element-plus/es/utils").PropWrapper<import("./src/types").SortState>, undefined, unknown, unknown, unknown>;
    readonly onColumnSort: import("element-plus/es/utils").BuildPropReturn<import("element-plus/es/utils").PropWrapper<import("./src/table").ColumnSortHandler<any>>, unknown, unknown, unknown, unknown>;
    readonly onExpandedRowsChange: import("element-plus/es/utils").BuildPropReturn<import("element-plus/es/utils").PropWrapper<import("./src/table").ExpandedRowsChangeHandler>, unknown, unknown, unknown, unknown>;
    readonly onEndReached: import("element-plus/es/utils").BuildPropReturn<import("element-plus/es/utils").PropWrapper<(distance: number) => void>, unknown, unknown, unknown, unknown>;
    readonly onRowExpand: import("element-plus/es/utils").BuildPropReturn<import("element-plus/es/utils").PropWrapper<import("./src/row").RowExpandHandler>, unknown, unknown, unknown, unknown>;
    readonly onScroll: import("element-plus/es/utils").BuildPropReturn<import("element-plus/es/utils").PropWrapper<(...args: any[]) => void>, unknown, unknown, unknown, unknown>;
    readonly onRowsRendered: import("element-plus/es/utils").BuildPropReturn<import("element-plus/es/utils").PropWrapper<(params: import("./src/grid").onRowRenderedParams) => void>, unknown, unknown, unknown, unknown>;
    readonly rowEventHandlers: import("element-plus/es/utils").BuildPropReturn<import("element-plus/es/utils").PropWrapper<import("./src/row").RowEventHandlers>, unknown, unknown, unknown, unknown>;
}, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    readonly cache: import("element-plus/es/utils").BuildPropReturn<NumberConstructor, 2, false, never, never>;
    readonly estimatedRowHeight: {
        readonly default: undefined;
        readonly type: import("vue").PropType<number>;
        readonly required: false;
        readonly validator: ((val: unknown) => boolean) | undefined;
        readonly __elPropsReservedKey: true;
    };
    readonly rowKey: import("element-plus/es/utils").BuildPropReturn<import("element-plus/es/utils").PropWrapper<import("./src/types").KeyType>, "id", unknown, unknown, unknown>;
    readonly headerClass: import("element-plus/es/utils").BuildPropReturn<import("element-plus/es/utils").PropWrapper<string | import("./src/table").HeaderClassNameGetter<any>>, unknown, unknown, unknown, unknown>;
    readonly headerProps: import("element-plus/es/utils").BuildPropReturn<import("element-plus/es/utils").PropWrapper<any>, unknown, unknown, unknown, unknown>;
    readonly headerCellProps: import("element-plus/es/utils").BuildPropReturn<import("element-plus/es/utils").PropWrapper<any>, unknown, unknown, unknown, unknown>;
    readonly headerHeight: import("element-plus/es/utils").BuildPropReturn<import("element-plus/es/utils").PropWrapper<number | number[]>, 50, unknown, unknown, unknown>;
    readonly footerHeight: import("element-plus/es/utils").BuildPropReturn<NumberConstructor, 0, unknown, unknown, unknown>;
    readonly rowClass: import("element-plus/es/utils").BuildPropReturn<import("element-plus/es/utils").PropWrapper<string | import("./src/table").RowClassNameGetter<any>>, unknown, unknown, unknown, unknown>;
    readonly rowProps: import("element-plus/es/utils").BuildPropReturn<import("element-plus/es/utils").PropWrapper<any>, unknown, unknown, unknown, unknown>;
    readonly rowHeight: import("element-plus/es/utils").BuildPropReturn<NumberConstructor, 50, unknown, unknown, unknown>;
    readonly cellProps: import("element-plus/es/utils").BuildPropReturn<import("element-plus/es/utils").PropWrapper<Record<string, any> | import("./src/table").ExtraCellPropGetter<any>>, unknown, unknown, unknown, unknown>;
    readonly columns: import("element-plus/es/utils").BuildPropReturn<import("element-plus/es/utils").PropWrapper<import("./src/common").AnyColumn[]>, unknown, true, unknown, unknown>;
    readonly data: import("element-plus/es/utils").BuildPropReturn<import("element-plus/es/utils").PropWrapper<any[]>, unknown, true, unknown, unknown>;
    readonly dataGetter: import("element-plus/es/utils").BuildPropReturn<import("element-plus/es/utils").PropWrapper<import("./src/types").DataGetter<any>>, unknown, unknown, unknown, unknown>;
    readonly fixedData: import("element-plus/es/utils").BuildPropReturn<import("element-plus/es/utils").PropWrapper<any[]>, unknown, unknown, unknown, unknown>;
    readonly expandColumnKey: StringConstructor;
    readonly expandedRowKeys: import("element-plus/es/utils").BuildPropReturn<import("element-plus/es/utils").PropWrapper<import("./src/types").KeyType[]>, () => never[], unknown, unknown, unknown>;
    readonly defaultExpandedRowKeys: import("element-plus/es/utils").BuildPropReturn<import("element-plus/es/utils").PropWrapper<import("./src/types").KeyType[]>, () => never[], unknown, unknown, unknown>;
    readonly class: StringConstructor;
    readonly fixed: BooleanConstructor;
    readonly style: import("element-plus/es/utils").BuildPropReturn<import("element-plus/es/utils").PropWrapper<import("vue").CSSProperties>, unknown, unknown, unknown, unknown>;
    readonly width: import("element-plus/es/utils").BuildPropReturn<NumberConstructor, unknown, true, unknown, unknown>;
    readonly height: import("element-plus/es/utils").BuildPropReturn<NumberConstructor, unknown, true, unknown, unknown>;
    readonly maxHeight: NumberConstructor;
    readonly useIsScrolling: BooleanConstructor;
    readonly indentSize: import("element-plus/es/utils").BuildPropReturn<NumberConstructor, 12, unknown, unknown, unknown>;
    readonly iconSize: import("element-plus/es/utils").BuildPropReturn<NumberConstructor, 12, unknown, unknown, unknown>;
    readonly hScrollbarSize: import("element-plus/es/utils").BuildPropReturn<NumberConstructor, 6, unknown, unknown, unknown>;
    readonly vScrollbarSize: import("element-plus/es/utils").BuildPropReturn<NumberConstructor, 6, unknown, unknown, unknown>;
    readonly scrollbarAlwaysOn: BooleanConstructor;
    readonly sortBy: import("element-plus/es/utils").BuildPropReturn<import("element-plus/es/utils").PropWrapper<import("./src/types").SortBy>, () => {
        key: import("./src/types").KeyType;
        order: import("./src/constants").SortOrder;
    }, unknown, unknown, unknown>;
    readonly sortState: import("element-plus/es/utils").BuildPropReturn<import("element-plus/es/utils").PropWrapper<import("./src/types").SortState>, undefined, unknown, unknown, unknown>;
    readonly onColumnSort: import("element-plus/es/utils").BuildPropReturn<import("element-plus/es/utils").PropWrapper<import("./src/table").ColumnSortHandler<any>>, unknown, unknown, unknown, unknown>;
    readonly onExpandedRowsChange: import("element-plus/es/utils").BuildPropReturn<import("element-plus/es/utils").PropWrapper<import("./src/table").ExpandedRowsChangeHandler>, unknown, unknown, unknown, unknown>;
    readonly onEndReached: import("element-plus/es/utils").BuildPropReturn<import("element-plus/es/utils").PropWrapper<(distance: number) => void>, unknown, unknown, unknown, unknown>;
    readonly onRowExpand: import("element-plus/es/utils").BuildPropReturn<import("element-plus/es/utils").PropWrapper<import("./src/row").RowExpandHandler>, unknown, unknown, unknown, unknown>;
    readonly onScroll: import("element-plus/es/utils").BuildPropReturn<import("element-plus/es/utils").PropWrapper<(...args: any[]) => void>, unknown, unknown, unknown, unknown>;
    readonly onRowsRendered: import("element-plus/es/utils").BuildPropReturn<import("element-plus/es/utils").PropWrapper<(params: import("./src/grid").onRowRenderedParams) => void>, unknown, unknown, unknown, unknown>;
    readonly rowEventHandlers: import("element-plus/es/utils").BuildPropReturn<import("element-plus/es/utils").PropWrapper<import("./src/row").RowEventHandlers>, unknown, unknown, unknown, unknown>;
}>>, {
    fixed: boolean;
    onScroll: (...args: any[]) => void;
    style: import("vue").CSSProperties;
    scrollbarAlwaysOn: boolean;
    rowKey: import("element-plus/es/utils").BuildPropType<import("element-plus/es/utils").PropWrapper<import("./src/types").KeyType>, unknown, unknown>;
    sortBy: import("./src/types").SortBy;
    estimatedRowHeight: number;
    useIsScrolling: boolean;
    rowHeight: number;
    hScrollbarSize: number;
    vScrollbarSize: number;
    onRowExpand: import("./src/row").RowExpandHandler;
    rowEventHandlers: import("./src/row").RowEventHandlers;
    headerHeight: import("element-plus/es/utils").BuildPropType<import("element-plus/es/utils").PropWrapper<number | number[]>, unknown, unknown>;
    cache: number;
    onRowsRendered: (params: import("./src/grid").onRowRenderedParams) => void;
    fixedData: any[];
    headerClass: import("element-plus/es/utils").BuildPropType<import("element-plus/es/utils").PropWrapper<string | import("./src/table").HeaderClassNameGetter<any>>, unknown, unknown>;
    headerProps: any;
    headerCellProps: any;
    footerHeight: number;
    rowClass: import("element-plus/es/utils").BuildPropType<import("element-plus/es/utils").PropWrapper<string | import("./src/table").RowClassNameGetter<any>>, unknown, unknown>;
    rowProps: any;
    cellProps: import("element-plus/es/utils").BuildPropType<import("element-plus/es/utils").PropWrapper<Record<string, any> | import("./src/table").ExtraCellPropGetter<any>>, unknown, unknown>;
    dataGetter: import("./src/types").DataGetter<any>;
    indentSize: number;
    iconSize: number;
    sortState: import("./src/types").SortState;
    onColumnSort: import("./src/table").ColumnSortHandler<any>;
    onExpandedRowsChange: import("./src/table").ExpandedRowsChangeHandler;
    onEndReached: (distance: number) => void;
    expandedRowKeys: import("./src/types").KeyType[];
    defaultExpandedRowKeys: import("./src/types").KeyType[];
}>> & Record<string, any>;
export declare const ElAutoResizer: import("element-plus/es/utils").SFCWithInstall<import("vue").DefineComponent<{
    readonly disableWidth: BooleanConstructor;
    readonly disableHeight: BooleanConstructor;
    readonly onResize: import("element-plus/es/utils").BuildPropReturn<import("element-plus/es/utils").PropWrapper<(event: {
        height: number;
        width: number;
    }) => void>, unknown, unknown, unknown, unknown>;
}, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    readonly disableWidth: BooleanConstructor;
    readonly disableHeight: BooleanConstructor;
    readonly onResize: import("element-plus/es/utils").BuildPropReturn<import("element-plus/es/utils").PropWrapper<(event: {
        height: number;
        width: number;
    }) => void>, unknown, unknown, unknown, unknown>;
}>>, {
    onResize: (event: {
        height: number;
        width: number;
    }) => void;
    disableWidth: boolean;
    disableHeight: boolean;
}>> & Record<string, any>;
export type { Column, Columns, SortBy, SortState, TableV2CustomizedHeaderSlotParam, } from './src/types';
export type { TableV2Instance } from './src/table-v2';
export * from './src/table';
export * from './src/row';
export type { HeaderCellSlotProps } from './src/renderers/header-cell';
